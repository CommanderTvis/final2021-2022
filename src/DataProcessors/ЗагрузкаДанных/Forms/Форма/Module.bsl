// @strict-types

&НаКлиенте
Асинх Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьExcel(Номенклатура, "НоменклатураТЗ");
КонецПроцедуры

// Параметры:
// Реквизит - Строка
// ИмяРеквизитТЗ - Строка
&НаКлиенте
Асинх Процедура ВыбратьExcel(Реквизит, ИмяРеквизитТЗ)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл Excel";
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.Фильтр = "(*.xls,*.xlsx)|*.xls;*.xlsx;|Microsoft Excel 97/2000/XP/2003 (*.xls)|*.xls|Microsoft Excel 2007/2010 (*.xlsx)|*.xlsx";

	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Диалог.ПолноеИмяФайла = Номенклатура;
	КонецЕсли;

	Файлы = Ждать Диалог.ВыбратьАсинх();

	Если Файлы = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Реквизит = Файлы[0];
	ЧтениеExcelЧерезТДВРеквизит(Реквизит, ИмяРеквизитТЗ);
КонецПроцедуры

&НаКлиенте
Процедура КлиентыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьExcel(Клиенты, "КлиентыТЗ");
КонецПроцедуры

&НаКлиенте
Процедура ТипыНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьExcel(ТипыНомеклатуры, "ТипыНоменклатурыТЗ");
КонецПроцедуры
&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
КонецПроцедуры
&НаКлиенте
Процедура ИвентыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьExcel(Ивенты, "ИвентыТЗ");
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере()
	ТЗ = РеквизитФормыВЗначение("ТипыНоменклатурыТЗ");

	Для Каждого Текущий Из ТЗ Цикл
		Если Не ЗначениеЗаполнено(Текущий.Название) Тогда
			Текущий.Ошибка = "Нужно указать название.";
			Продолжить;
		КонецЕсли;
			
		Если Справочники.ТипыНоменклатуры.НайтиПоНаименованию(Текущий.Название) Тогда
			Текущий.Ошибка = "Тип номенклатуры уже существует.";
			Продолжить;
		КонецЕсли;

		НачТариф = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Текущий.НачальныйТариф);
		
		Если НачТариф = Неопределено Тогда
			Текущий.Ошибка = "Необходимо указать начальный тариф.";
			Продолжить;
		КонецЕсли;

		Попытка
			НачатьТранзакцию();
			ТипНоменклатурыОбъект = Справочники.ТипыНоменклатуры.СоздатьЭлемент();
			ТипНоменклатурыОбъект.Наименование = Текущий.Название;
			ТипНоменклатурыОбъект.Записать();
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Текущий.Ошибка = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;

	ТЗ = РеквизитФормыВЗначение("КлиентыТЗ");

	Для Каждого Текущий Из ТЗ Цикл
		Если Не ЗначениеЗаполнено(Текущий.Название) Тогда
			Текущий.Ошибка = "Нужно указать логин.";
			Продолжить;
		КонецЕсли;
	
		Если Справочники.Клиенты.НайтиПоНаименованию(Текущий.Логин) Тогда
			Текущий.Ошибка = "Клиент уже существует.";
			Продолжить;
		КонецЕсли;
		
		Попытка
		КлиентОбъект = Справочники.Клиенты.СоздатьЭлемент();
		Исключение
			ОтменитьТранзакцию();
			Текущий.Ошибка = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;

	ТЗ = РеквизитФормыВЗначение("СтанцииТЗ");

	Для Каждого Текущий Из ТЗ Цикл
		Попытка
			НачатьТранзакцию();
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Текущий.Ошибка = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;

	ТЗ = РеквизитФормыВЗначение("ИвентыТЗ");

	Для Каждого Текущий Из ТЗ Цикл
		Попытка
			НачатьТранзакцию();
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Текущий.Ошибка = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;

	ТЗ = РеквизитФормыВЗначение("НоменклатураТЗ");

	Для Каждого Текущий Из ТЗ Цикл
	КонецЦикла;

	Для Каждого Текущий Из ТЗ Цикл
		Тип = Текущий.ТипНоменклатуры;
		Если ЗначениеЗаполнено(Текущий.Наименование) И Тип <> Неопределено И Текущий.Артикул <> Неопределено
			И Текущий.Используется <> Неопределено Тогда
			ТоварСсылка = Справочники.Номенклатура.НайтиПоНаименованию(Текущий.Наименование);
			ТоварОбъект = Неопределено;
			Если Не ЗначениеЗаполнено(ТоварСсылка) Тогда
				ТоварОбъект = Справочники.Номенклатура.СоздатьЭлемент();
			Иначе
				ТоварОбъект = ТоварСсылка.ПолучитьОбъект();
			КонецЕсли;
			ТоварОбъект.Код = Текущий.Артикул;
			ТоварОбъект.Наименование = Текущий.Наименование;
			ТоварОбъект.ТипНоменклатуры = Тип;
			ТоварОбъект.Записать();
			Сообщить(ТоварОбъект.Код);
			Если ЗначениеЗаполнено(Текущий.ДатаВвода) Тогда
				ДокВвод = Документы.ВводВЭксплуатацию.СоздатьДокумент();
				ДокВвод.Товар = ТоварОбъект.Ссылка;
				ДокВвод.Дата = Текущий.ДатаВвода;
				ДокВвод.Записать();
			КонецЕсли;

			Если ЗначениеЗаполнено(Текущий.ДатаВывода) Тогда
				ДокВывод = Документы.ВыводИзЭксплуатации.СоздатьДокумент();
				ДокВывод.Товар = ТоварОбъект.Ссылка;
				ДокВывод.Дата = Текущий.ДатаВывода;
				ДокВывод.Основание = Перечисления.ОснованияВыводаТовараИзЭксплуатации.Списание;
				ДокВывод.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СтанцииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьExcel(Станции, "СтанцииТЗ");
КонецПроцедуры

&НаСервере
Процедура ЧтениеExcelЧерезТДВРеквизит(ВыбранныйФайл, ИмяРеквизита)
	ТаблДок = Новый ТабличныйДокумент;
	ТаблДок.Прочитать(ВыбранныйФайл, СпособЧтенияЗначенийТабличногоДокумента.Текст);

	ПЗ = Новый ПостроительЗапроса;
	ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТаблДок.Область());
	ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;
	ПЗ.ЗаполнитьНастройки();
	ПЗ.Выполнить();

	ТЗ = ПЗ.Результат.Выгрузить();
	Колонка = ТЗ.Колонки.Найти("Начальный тариф");
	Если Колонка <> Неопределено Тогда
		Колонка.Имя = "НачальныйТариф";
	КонецЕсли;

	ЗначениеВРеквизитФормы(ТЗ, ИмяРеквизита);
КонецПроцедуры