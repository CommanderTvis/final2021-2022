&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Клиент = ПользователиВызовСервера.ТекущийКлиент();

	Если Не ЗначениеЗаполнено(Клиент) Тогда
		СообщенияКлиентСервер.СообщитьСоСвойствами("Данная форма доступна только зарегистрированным клиентам.", , );
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ДоступныеИвенты.Параметры.УстановитьЗначениеПараметра("Клиент", Клиент);
	ВыполненныеИвенты.Параметры.УстановитьЗначениеПараметра("Клиент", Клиент);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИвент(Команда)
	Для Каждого Идентификатор Из Элементы.ДоступныеИвенты.ВыделенныеСтроки Цикл
		ВыполнитьОдин(Элементы.ДоступныеИвенты.ДанныеСтроки(Идентификатор).Ссылка);
	КонецЦикла;
	Элементы.ДоступныеИвенты.Обновить();
	Элементы.ВыполненныеИвенты.Обновить();
КонецПроцедуры

// Параметры:
//   Ивент - СправочникСсылка.Ивенты
&НаСервере
Процедура ВыполнитьОдин(Ивент)
	ТекДата = ТекущаяДатаСеанса();
	Попытка
		НачатьТранзакцию();
		Документ = Документы.УчастиеВИвенте.СоздатьДокумент();
		Документ.Клиент = Клиент;
		Документ.Ивент = Ивент;
		Документ.Дата = ТекДата;
		Документ.Записать(РежимЗаписиДокумента.Проведение);
		Бонус = Ивент.Баллы;
		Документ = Документы.ПолучениеБонусныхБаллов.СоздатьДокумент();
		Документ.Дата = ТекДата;
		Документ.Клиент = Клиент;
		Документ.КоличествоБаллов = Бонус;
		Документ.Причина = Перечисления.ПричиныПолученияБаллов.ЗаИвент;
		Документ.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры