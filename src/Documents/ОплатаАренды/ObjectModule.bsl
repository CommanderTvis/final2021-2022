//@strict-types

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Скидка) Тогда
		Скидка = Клиент.Статус.Скидка;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Тариф) Тогда
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПрайсПоТарифам.Тариф
		|ИЗ
		|	РегистрСведений.ПрайсПоТарифам КАК ПрайсПоТарифам
		|ГДЕ
		|	ПрайсПоТарифам.ТипНоменклатуры = &ТипНоменклатуры";

		Запрос.УстановитьПараметр("ТипНоменклатуры", Товар.ТипНоменклатуры);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Значение = ВыборкаДетальныеЗаписи.Тариф; // Число -
			Тариф = Значение;
		КонецЕсли;
	КонецЕсли;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Если Не ЗначениеЗаполнено(СуммаОплаты) Тогда
		СуммаОплаты = Окр(Тариф * ВремяАренды * (100 - Скидка) / 100, 0, РежимОкругления.Окр15как10);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!

	// регистр СтатистикаПользователей
	Движения.СтатистикаПользователей.Записывать = Истина;
	Движение = Движения.СтатистикаПользователей.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Клиент = Клиент;
	Движение.ВремяАренды = ВремяАренды;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры